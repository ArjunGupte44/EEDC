import numpy as np

# Main function to set up matrices and perform multiple multiplications
def main(num_mult, mat_dim):
    # Initialize the first matrix with a specific pattern
    first = np.array([[i * j * 0.5 for j in range(mat_dim)] for i in range(mat_dim)])
    # Initialize the second matrix with a different pattern
    second = np.array([[(i + j) * 0.5 for j in range(mat_dim)] for i in range(mat_dim)])
    # Initialize the result matrix with zeros
    result = np.zeros((mat_dim, mat_dim))

    # Perform matrix multiplication 'num_mult' times
    for _ in range(num_mult):
        result = np.dot(first, second)

    # Print a specific element of the result matrix as a sample output
    print("Result[5][5]:", result[5][5])

# Entry point of the script
if __name__ == "__main__":
    import sys
    # Set the number of multiplications to perform
    num_mult = int(100)
    # Set the dimension of the square matrices
    mat_dim = int(100)
    # Call the main function with these parameters
    main(num_mult, mat_dim)